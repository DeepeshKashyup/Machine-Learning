setwd("~/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library(e1071)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(e1071)
regressor = svm(formula=Salary ~ .,data=dataset)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVM Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula=Salary ~ .,data=dataset,type='eps')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = svm(formula=Salary ~ .,data=dataset,type='eps')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = svm(formula=Salary ~ .,data=dataset,type='eps-regression')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
library(e1071)
regressor = svm(formula=Salary ~ .,data=dataset,type='eps-regression')
# Regression Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting the svr Model to the dataset
#install.packages('e1071')
library(e1071)
regressor = svm(formula=Salary ~ .,data=dataset,type='eps-regression')
regressor = svm(formula=Salary ~ .,data=dataset,type='nu-regression')
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVM Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula=Salary ~ .,data=dataset,type='eps-regression')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the svr Model results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVM Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula=Salary ~ .,data=dataset,type='nu-regression')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the svr Model results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVM Model)') +
xlab('Level') +
ylab('Salary')
